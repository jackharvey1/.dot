# Create a new directory and enter it
function mk() {
    mkdir -p "$@" && cd "$@"
}

# Open man page as PDF
function manpdf() {
    man -t "${1}" | open -f -a /Applications/Preview.app/
}

function credentials () {
    local line_number=$(grep -n $1 ~/.aws/credentials | cut -d ':' -f1)
    if [ -z "$line_number" ]; then
        echo "Profile not found"
    else
        local id_line_number=$((line_number + 1))
        local key_line_number=$((id_line_number + 1))

        export AWS_ACCESS_KEY_ID=$(sed -n -e ""${id_line_number}""p"" ~/.aws/credentials | cut -d '=' -f2)
        export AWS_SECRET_ACCESS_KEY=$(sed -n -e ""${key_line_number}""p"" ~/.aws/credentials | cut -d '=' -f2)
    fi
}

# Extra many types of compressed packages
# Credit: http://nparikh.org/notes/zshrc.txt
extract() {
    if [ -f "$1" ]; then
        case "$1" in
            *.tar.bz2)  tar -jxvf "$1"                        ;;
            *.tar.gz)   tar -zxvf "$1"                        ;;
            *.bz2)      bunzip2 "$1"                          ;;
            *.dmg)      hdiutil mount "$1"                    ;;
            *.gz)       gunzip "$1"                           ;;
            *.tar)      tar -xvf "$1"                         ;;
            *.tbz2)     tar -jxvf "$1"                        ;;
            *.tgz)      tar -zxvf "$1"                        ;;
            *.zip)      unzip "$1"                            ;;
            *.ZIP)      unzip "$1"                            ;;
            *.pax)      cat "$1" | pax -r                     ;;
            *.pax.Z)    uncompress "$1" --stdout | pax -r     ;;
            *.Z)        uncompress "$1"                       ;;
            *) echo "'$1' cannot be extracted/mounted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file to extract"
    fi
}

floop() {
    for d in ./*/; do (cd "$d" && eval $1); done
}

function assume() {
    echo -n "Parent account: "
    read PARENT_ACCOUNT
    echo -n "Assume account: "
    read ASSUME_ACCOUNT
    echo -n "AWS username: "
    read AWS_USERNAME
    echo -n "Role: "
    read ROLE
    echo -n "MFA Token: "
    read OTP_TOKEN

    eval $(PARENT_ACCOUNT=$PARENT_ACCOUNT ACCOUNT=$ASSUME_ACCOUNT AWS_USERNAME=$AWS_USERNAME ROLE=$ROLE OTP_TOKEN=$OTP_TOKEN /Users/jackharvey/.dot/scripts/assume-role.sh)
}
